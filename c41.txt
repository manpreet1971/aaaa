var database;
var gameState=0;
var form,game;
var playerCount;
var player;
var allPlayers;

var car1,car2,car3,car4;
var cars=[];
var x,y;
y=0;
var car1Img,car2Img,car3Img,car4Img,trackImg;
var space;
var passedFinish=false;

function preload(){
   car1Img=loadImage('images/car1.png');
   car2Img=loadImage('images/car2.png');
   car3Img=loadImage('images/car3.png');
   car4Img=loadImage('images/car4.png');
   trackImg=loadImage('images/track.jpg');     

}
function setup(){
    createCanvas(displayWidth,displayHeight);
    
    database=firebase.database();

    game=new Game();
    game.getState();
    game.start();
    
}

function draw(){

  if(playerCount==4){
      game.update(1);
  }
  if(gameState===1){
      clear();
      game.play();
      
  }
  if(gameState===2){
     game.end();
  }
    
}
--------------------------------------------------------------------------------
class Form {

    constructor() {

        this.title = createElement('h2');
        this.title.html('Car Racing Game');
        this.title.position(displayWidth/2-50, 0);

        this.input = createInput("Name");
        this.input.position(displayWidth/2-40,displayHeight/2-80);

        this.button = createButton("Play");
        this.button.position(displayWidth/2+30, displayHeight/2);

        this.reset = createButton("Reset");
        this.reset.position(displayWidth-100, 20);

        this.title1 = createElement('h3');
        this.title1.html('Car Racing Game Over!!!');
      //  this.title1.position(displayWidth/2-100, 50)
        
    }

    disappear(){
      
        this.title.hide();
        this.greetings.hide();
        this.title1.hide();

    }
    appear()
    {
        this.title1.position(displayWidth/2, 500)
    }

    display() {

        this.button.mousePressed(()=> {

           // console.log(this);

            this.input.hide();
            this.button.hide();

            player.name = this.input.value();

            this.greetings = createElement('h3');
            this.greetings.html("Hello " + player.name);
            this.greetings.position(displayWidth/2-70, displayHeight/4);

            playerCount=playerCount+1;
            player.index=playerCount;
            player.updateCount(playerCount);
            
            if(playerCount===1){
                player.xPos=375;
            }
            if(playerCount===2){
                player.xPos=575;
            }
            if(playerCount===3){
                player.xPos=775;
            }
            if(playerCount===4){
                player.xPos=975;
            }

            player.update();

        });

      this.reset.mousePressed(()=>{
          game.update(0);
          player.updateCount(0);
          
      });

    }
}
------------------------------------------------------------------------------------------------------
class Game{
   constructor(){}
      getState(){
        var gameStateRef= database.ref('gameState');
        gameStateRef.on("value", function(data){
           gameState= data.val();
          
        });

   }

  async start(){

       if(gameState===0){

           player=new Player();
           var playerCountRef=await database.ref('playerCount').once("value");
           player.getCount();
           form=new Form();
           form.display();
           car1=createSprite(375,200);
           car1.addImage(car1Img);
           car2=createSprite(575,200);
           car2.addImage(car2Img);
           car3=createSprite(775,200);
           car3.addImage(car3Img);
           car4=createSprite(995,200);
           car4.addImage(car4Img);
           cars=[car1,car2,car3,car4];

           }
       
  }

  play(){
     textSize(30);
     text('Game Start!',120,100);
     form.disappear();

     Player.getPlayerInfo();
     
     background("black");
     
     if(allPlayers!==undefined){

        image(trackImg,0,-displayHeight*4,displayWidth,displayHeight*5);
        drawSprites();

        for(var i=1;i<=4;i++){

           var playerIndex="player"+i;

           textAlign(CENTER);
           x=allPlayers[playerIndex].xPos;

           y=displayHeight-allPlayers[playerIndex].distance;
           cars[i-1].x=x;

           cars[i-1].y=y;
         
          if(player.index===i){
              push();
              fill('red');
              text(allPlayers[playerIndex].name,cars[i-1].x,cars[i-1].y+75);
              pop();
              camera.position.x=displayWidth/2;
              camera.position.y=cars[i-1].y;
             
           }
           else{
              push();
              fill('white');
              text(allPlayers[playerIndex].name,cars[i-1].x,cars[i-1].y+75);
              pop();
           }
          
      }
     }
     if(passedFinish===false){
     
    if(keyIsDown(UP_ARROW)){
        player.distance=player.distance+10;
        player.update();
        //player.distance+=10;

       }

    if(keyIsDown(LEFT_ARROW)){
       player.xPos=player.xPos-5;
       player.update();
   
    }
         
   if(keyIsDown(RIGHT_ARROW)){
     player.xPos=player.xPos+5;
     player.update();
      
       }  
     }
         
   if(player.distance>displayHeight*5-80){
         passedFinish=true;
       }

  }

  end(){
     textSize(50);
     text("Game Ends!",500,100);
     form.appear();
  }

  update(state){
     database.ref('/').update({
        gameState:state
   });
  
  }

}
-----------------------------------------------------------------
class Player{
    
    constructor(){
       this.index=null;
       this.name=null;
       this.distance=0;
       this.xPos=0;

    }

     getCount(){

        var playerCountRef= database.ref('playerCount');
        playerCountRef.on("value", function(data){
        playerCount= data.val();
                
        });
        
      }

     updateCount(count){
           database.ref('/').update({
                playerCount:count
           })
     }

     update(){

          var playerIndex="player"+player.index;
          database.ref(playerIndex).update({
               name:this.name,
               distance:this.distance,
               xPos:this.xPos
          });
          
     }

     static getPlayerInfo(){
          
          database.ref('/').on("value",function(data){

                allPlayers=data.val();

          });

     }

}